package Greeedy;

import java.util.LinkedList;
import java.util.Queue;

public class Programers42860 {
	public int solution(String name) {
		int answer = 0;
		// 0 2 1

		char[] words = name.toCharArray();
		int len = words.length;
		Queue<Integer> queue = new LinkedList<Integer>();
		queue.add(0);

		/*
		 * 
		 * 
		 * 
		*/

		while (queue.isEmpty()) {
			int i = queue.poll();
			answer += Math.min(words[i] - 'A', Math.abs('A' - words[i]));
			words[i] = 'A';

			int leftIndex = i;
			int rightIndex = i;
			int leftCount = 0;
			int rightCount = 0;

			while (true) {
				leftIndex--;
				if (leftIndex < 0) {
					leftIndex = len - 1;
				}
				leftCount++;

				if (!(words[leftIndex] == 'A')) {
					break;
				}
			}
			while (true) {
				rightIndex--;
				if (rightIndex >= len) {
					rightIndex = 0;
				}
				rightCount++;

				if (!(words[rightIndex] == 'A')) {
					break;
				}
			}

			int min = Math.min(rightCount, leftCount);
			answer += min;

			if (min == leftCount) {
				queue.add(leftIndex);
				continue;
			}

			if (min == rightCount) {
				queue.add(rightIndex);
				
			}

		}

		return answer;
	}
}
